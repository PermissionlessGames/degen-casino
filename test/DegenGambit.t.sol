// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

import {Test, console} from "forge-std/Test.sol";
import {DegenGambit} from "../src/DegenGambit.sol";

contract DegenGambitTest is Test {
    DegenGambit public degenGambit;

    uint256 blocksToAct = 20;
    uint256 costToSpin = 0.1 ether;
    uint256 costToRespin = 0.07 ether;

    function setUp() public {
        degenGambit = new DegenGambit(blocksToAct, costToSpin, costToRespin);
    }

    function test_configuration() public view {
        assertEq(degenGambit.BlocksToAct(), blocksToAct);
        assertEq(degenGambit.CostToSpin(), costToSpin);
        assertEq(degenGambit.CostToRespin(), costToRespin);
    }

    function test_supportsInterface() public view {
        assertEq(degenGambit.supportsInterface(0x01ffc9a7), true);
        assertEq(degenGambit.supportsInterface(0x36372b07), true);
    }

    function test_ERC20Metadata() public view {
        assertEq(degenGambit.name(), "Degen's Gambit");
        assertEq(degenGambit.symbol(), "GAMBIT");
        assertEq(degenGambit.decimals(), 0);
    }

    // Test generated by the generate_outcome_tests function in the game design notebook using the following parameters:
    // generate_outcome_tests(16, 16, 16, 42, False)
    function test_16_16_16_42_False() public view {
        uint256 left;
        uint256 center;
        uint256 right;
        uint256 remainingEntropy;

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53173843084106756314349564952,
            false
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53173843084106756314355807636,
            false
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53173843084106756314362050321,
            false
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53173843084113459345254380568,
            false
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53173843084113459345260623252,
            false
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53173843084113459345266865937,
            false
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53173843084120162377232938008,
            false
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53173843084120162377239180692,
            false
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53173843084120162377245423377,
            false
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53188237734519807998771459096,
            false
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53188237734519807998777701780,
            false
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53188237734519807998783944465,
            false
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53188237734526511029676274712,
            false
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53188237734526511029682517396,
            false
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53188237734526511029688760081,
            false
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53188237734533214061654832152,
            false
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53188237734533214061661074836,
            false
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53188237734533214061667317521,
            false
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53202632386085781187800200216,
            false
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53202632386085781187806442900,
            false
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53202632386085781187812685585,
            false
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53202632386092484218705015832,
            false
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53202632386092484218711258516,
            false
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53202632386092484218717501201,
            false
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53202632386099187250683573272,
            false
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53202632386099187250689815956,
            false
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53202632386099187250696058641,
            false
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);
    }

    // Test generated by the generate_outcome_tests function in the game design notebook using the following parameters:
    // generate_outcome_tests(16, 16, 16, 42, True)
    function test_16_16_16_42_True() public view {
        uint256 left;
        uint256 center;
        uint256 right;
        uint256 remainingEntropy;

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53173160156817473945976236607,
            true
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53173160156817473945982553334,
            true
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53173160156817473945988870062,
            true
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53173160156824256479946926655,
            true
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53173160156824256479953243382,
            true
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53173160156824256479959560110,
            true
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53173160156831039014991358527,
            true
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53173160156831039014997675254,
            true
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53173160156831039015003991982,
            true
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53187725539917378344546265663,
            true
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53187725539917378344552582390,
            true
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53187725539917378344558899118,
            true
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53187725539924160878516955711,
            true
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53187725539924160878523272438,
            true
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53187725539924160878529589166,
            true
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53187725539930943413561387583,
            true
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53187725539930943413567704310,
            true
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53187725539930943413574021038,
            true
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53202290923017282743116294719,
            true
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53202290923017282743122611446,
            true
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53202290923017282743128928174,
            true
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53202290923024065277086984767,
            true
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53202290923024065277093301494,
            true
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53202290923024065277099618222,
            true
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53202290923030847812131416639,
            true
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53202290923030847812137733366,
            true
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53202290923030847812144050094,
            true
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);
    }

    // Test generated by the generate_outcome_tests function in the game design notebook using the following parameters:
    // generate_outcome_tests(17, 16, 16, 42, True)
    function test_17_16_16_42_True() public view {
        uint256 left;
        uint256 center;
        uint256 right;
        uint256 remainingEntropy;

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53202290924170204247723141695,
            true
        );
        assertEq(left, 17);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53202290924170204247729458422,
            true
        );
        assertEq(left, 17);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53202290924170204247735775150,
            true
        );
        assertEq(left, 17);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53202290924176986781693831743,
            true
        );
        assertEq(left, 17);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53202290924176986781700148470,
            true
        );
        assertEq(left, 17);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53202290924176986781706465198,
            true
        );
        assertEq(left, 17);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53202290924183769316738263615,
            true
        );
        assertEq(left, 17);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53202290924183769316744580342,
            true
        );
        assertEq(left, 17);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53202290924183769316750897070,
            true
        );
        assertEq(left, 17);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53209573614567234942401309247,
            true
        );
        assertEq(left, 17);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53209573614567234942407625974,
            true
        );
        assertEq(left, 17);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53209573614567234942413942702,
            true
        );
        assertEq(left, 17);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53209573614574017476371999295,
            true
        );
        assertEq(left, 17);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53209573614574017476378316022,
            true
        );
        assertEq(left, 17);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53209573614574017476384632750,
            true
        );
        assertEq(left, 17);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53209573614580800011416431167,
            true
        );
        assertEq(left, 17);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53209573614580800011422747894,
            true
        );
        assertEq(left, 17);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53209573614580800011429064622,
            true
        );
        assertEq(left, 17);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53216856306117187141686323775,
            true
        );
        assertEq(left, 17);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53216856306117187141692640502,
            true
        );
        assertEq(left, 17);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53216856306117187141698957230,
            true
        );
        assertEq(left, 17);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53216856306123969675657013823,
            true
        );
        assertEq(left, 17);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53216856306123969675663330550,
            true
        );
        assertEq(left, 17);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53216856306123969675669647278,
            true
        );
        assertEq(left, 17);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53216856306130752210701445695,
            true
        );
        assertEq(left, 17);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53216856306130752210707762422,
            true
        );
        assertEq(left, 17);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53216856306130752210714079150,
            true
        );
        assertEq(left, 17);
        assertEq(center, 16);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);
    }

    // Test generated by the generate_outcome_tests function in the game design notebook using the following parameters:
    // generate_outcome_tests(16, 17, 16, 42, True)
    function test_16_17_16_42_True() public view {
        uint256 left;
        uint256 center;
        uint256 right;
        uint256 remainingEntropy;

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53173160156831039016065100351,
            true
        );
        assertEq(left, 16);
        assertEq(center, 17);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53173160156831039016071417078,
            true
        );
        assertEq(left, 16);
        assertEq(center, 17);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53173160156831039016077733806,
            true
        );
        assertEq(left, 16);
        assertEq(center, 17);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53173160156844604086153964095,
            true
        );
        assertEq(left, 16);
        assertEq(center, 17);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53173160156844604086160280822,
            true
        );
        assertEq(left, 16);
        assertEq(center, 17);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53173160156844604086166597550,
            true
        );
        assertEq(left, 16);
        assertEq(center, 17);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53173160156858169156242827839,
            true
        );
        assertEq(left, 16);
        assertEq(center, 17);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53173160156858169156249144566,
            true
        );
        assertEq(left, 16);
        assertEq(center, 17);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53173160156858169156255461294,
            true
        );
        assertEq(left, 16);
        assertEq(center, 17);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53187725539930943414635129407,
            true
        );
        assertEq(left, 16);
        assertEq(center, 17);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53187725539930943414641446134,
            true
        );
        assertEq(left, 16);
        assertEq(center, 17);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53187725539930943414647762862,
            true
        );
        assertEq(left, 16);
        assertEq(center, 17);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53187725539944508484723993151,
            true
        );
        assertEq(left, 16);
        assertEq(center, 17);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53187725539944508484730309878,
            true
        );
        assertEq(left, 16);
        assertEq(center, 17);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53187725539944508484736626606,
            true
        );
        assertEq(left, 16);
        assertEq(center, 17);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53187725539958073554812856895,
            true
        );
        assertEq(left, 16);
        assertEq(center, 17);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53187725539958073554819173622,
            true
        );
        assertEq(left, 16);
        assertEq(center, 17);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53187725539958073554825490350,
            true
        );
        assertEq(left, 16);
        assertEq(center, 17);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53202290923030847813205158463,
            true
        );
        assertEq(left, 16);
        assertEq(center, 17);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53202290923030847813211475190,
            true
        );
        assertEq(left, 16);
        assertEq(center, 17);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53202290923030847813217791918,
            true
        );
        assertEq(left, 16);
        assertEq(center, 17);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53202290923044412883294022207,
            true
        );
        assertEq(left, 16);
        assertEq(center, 17);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53202290923044412883300338934,
            true
        );
        assertEq(left, 16);
        assertEq(center, 17);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53202290923044412883306655662,
            true
        );
        assertEq(left, 16);
        assertEq(center, 17);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53202290923057977953382885951,
            true
        );
        assertEq(left, 16);
        assertEq(center, 17);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53202290923057977953389202678,
            true
        );
        assertEq(left, 16);
        assertEq(center, 17);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53202290923057977953395519406,
            true
        );
        assertEq(left, 16);
        assertEq(center, 17);
        assertEq(right, 16);
        assertEq(remainingEntropy, 42);
    }

    // Test generated by the generate_outcome_tests function in the game design notebook using the following parameters:
    // generate_outcome_tests(16, 16, 17, 42, True)
    function test_16_16_17_42_True() public view {
        uint256 left;
        uint256 center;
        uint256 right;
        uint256 remainingEntropy;

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53173160156817473945988870063,
            true
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 17);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53173160156817473945995186790,
            true
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 17);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53173160156817473946001503518,
            true
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 17);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53173160156824256479959560111,
            true
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 17);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53173160156824256479965876838,
            true
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 17);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53173160156824256479972193566,
            true
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 17);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53173160156831039015003991983,
            true
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 17);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53173160156831039015010308710,
            true
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 17);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53173160156831039015016625438,
            true
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 17);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53187725539917378344558899119,
            true
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 17);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53187725539917378344565215846,
            true
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 17);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53187725539917378344571532574,
            true
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 17);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53187725539924160878529589167,
            true
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 17);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53187725539924160878535905894,
            true
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 17);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53187725539924160878542222622,
            true
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 17);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53187725539930943413574021039,
            true
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 17);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53187725539930943413580337766,
            true
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 17);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53187725539930943413586654494,
            true
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 17);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53202290923017282743128928175,
            true
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 17);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53202290923017282743135244902,
            true
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 17);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53202290923017282743141561630,
            true
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 17);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53202290923024065277099618223,
            true
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 17);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53202290923024065277105934950,
            true
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 17);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53202290923024065277112251678,
            true
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 17);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53202290923030847812144050095,
            true
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 17);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53202290923030847812150366822,
            true
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 17);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            53202290923030847812156683550,
            true
        );
        assertEq(left, 16);
        assertEq(center, 16);
        assertEq(right, 17);
        assertEq(remainingEntropy, 42);
    }

    // Test generated by the generate_outcome_tests function in the game design notebook using the following parameters:
    // generate_outcome_tests(5, 0, 12, 42, True)
    function test_5_0_12_42_True() public view {
        uint256 left;
        uint256 center;
        uint256 right;
        uint256 remainingEntropy;

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            52349424159873498624038836971,
            true
        );
        assertEq(left, 5);
        assertEq(center, 0);
        assertEq(right, 12);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            52349424159873498624089871062,
            true
        );
        assertEq(left, 5);
        assertEq(center, 0);
        assertEq(right, 12);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            52349424159873498624140905153,
            true
        );
        assertEq(left, 5);
        assertEq(center, 0);
        assertEq(right, 12);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            52349424159874854981153364715,
            true
        );
        assertEq(left, 5);
        assertEq(center, 0);
        assertEq(right, 12);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            52349424159874854981204398806,
            true
        );
        assertEq(left, 5);
        assertEq(center, 0);
        assertEq(right, 12);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            52349424159874854981255432897,
            true
        );
        assertEq(left, 5);
        assertEq(center, 0);
        assertEq(right, 12);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            52349424159876211339341634283,
            true
        );
        assertEq(left, 5);
        assertEq(center, 0);
        assertEq(right, 12);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            52349424159876211339392668374,
            true
        );
        assertEq(left, 5);
        assertEq(center, 0);
        assertEq(right, 12);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            52349424159876211339443702465,
            true
        );
        assertEq(left, 5);
        assertEq(center, 0);
        assertEq(right, 12);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            52378843295952961190351379179,
            true
        );
        assertEq(left, 5);
        assertEq(center, 0);
        assertEq(right, 12);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            52378843295952961190402413270,
            true
        );
        assertEq(left, 5);
        assertEq(center, 0);
        assertEq(right, 12);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            52378843295952961190453447361,
            true
        );
        assertEq(left, 5);
        assertEq(center, 0);
        assertEq(right, 12);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            52378843295954317547465906923,
            true
        );
        assertEq(left, 5);
        assertEq(center, 0);
        assertEq(right, 12);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            52378843295954317547516941014,
            true
        );
        assertEq(left, 5);
        assertEq(center, 0);
        assertEq(right, 12);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            52378843295954317547567975105,
            true
        );
        assertEq(left, 5);
        assertEq(center, 0);
        assertEq(right, 12);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            52378843295955673905654176491,
            true
        );
        assertEq(left, 5);
        assertEq(center, 0);
        assertEq(right, 12);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            52378843295955673905705210582,
            true
        );
        assertEq(left, 5);
        assertEq(center, 0);
        assertEq(right, 12);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            52378843295955673905756244673,
            true
        );
        assertEq(left, 5);
        assertEq(center, 0);
        assertEq(right, 12);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            52408262432032423756663921387,
            true
        );
        assertEq(left, 5);
        assertEq(center, 0);
        assertEq(right, 12);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            52408262432032423756714955478,
            true
        );
        assertEq(left, 5);
        assertEq(center, 0);
        assertEq(right, 12);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            52408262432032423756765989569,
            true
        );
        assertEq(left, 5);
        assertEq(center, 0);
        assertEq(right, 12);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            52408262432033780113778449131,
            true
        );
        assertEq(left, 5);
        assertEq(center, 0);
        assertEq(right, 12);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            52408262432033780113829483222,
            true
        );
        assertEq(left, 5);
        assertEq(center, 0);
        assertEq(right, 12);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            52408262432033780113880517313,
            true
        );
        assertEq(left, 5);
        assertEq(center, 0);
        assertEq(right, 12);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            52408262432035136471966718699,
            true
        );
        assertEq(left, 5);
        assertEq(center, 0);
        assertEq(right, 12);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            52408262432035136472017752790,
            true
        );
        assertEq(left, 5);
        assertEq(center, 0);
        assertEq(right, 12);
        assertEq(remainingEntropy, 42);

        (left, center, right, remainingEntropy) = degenGambit.outcome(
            52408262432035136472068786881,
            true
        );
        assertEq(left, 5);
        assertEq(center, 0);
        assertEq(right, 12);
        assertEq(remainingEntropy, 42);
    }
}
